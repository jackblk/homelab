services:
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    pull_policy: always
    restart: unless-stopped
    container_name: homepage
    # ports:
    # - 3000:3000
    env_file: ./.env
    volumes:
      - /data2/server/data/homepage/config:/app/config
      - /var/run/docker.sock:/var/run/docker.sock
      - /data1:/data1:ro
      - /data2:/data2:ro

  home-assistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    pull_policy: always
    restart: unless-stopped
    container_name: home-assistant
    # ports:
    # - 8123:8123
    volumes:
      - /data2/server/data/home-assistant/config:/config
      - /etc/localtime:/etc/localtime:ro
      # - /run/dbus:/run/dbus:ro # for Bluetooth integration
    # privileged: true

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    pull_policy: always
    restart: unless-stopped
    container_name: jellyseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=Asia/Ho_Chi_Minh
    # ports:
    #   - 5055:5055
    volumes:
      - /data2/server/data/jellyseer/config:/app/config
  jellyfin:
    image: jellyfin/jellyfin
    pull_policy: always
    restart: unless-stopped
    container_name: jellyfin

    # currently using the first user from my system
    # uid: id -u user
    # gid: id -g group
    user: 1000:1000
    # network_mode: "host" # not using for multiple services
    group_add:
      # check group id with `cat /etc/group | grep render`
      - "106"
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
      # - /dev/dri/renderD129:/dev/dri/renderD129
      # - /dev/dri/card1:/dev/dri/card1
      - /dev/dri/card0:/dev/dri/card0
    # ports:
    #   - 8096:8096 # http
    #   - 8920:8920 # https
    volumes:
      - /data2/server/data/jellyfin/config:/config
      - /data2/server/data/jellyfin/cache:/cache
      - /data2/server/media/media:/media
    # Optional - alternative address used for autodiscovery
    environment:
      - JELLYFIN_PublishedServerUrl=https://flix.haicon.moe
      - PUID=1000
      - PGID=1000

  ddclient:
    image: linuxserver/ddclient
    pull_policy: always
    restart: unless-stopped
    container_name: ddclient
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Ho_Chi_Minh
    volumes:
      - /data2/server/data/ddclient/config:/config

  # nginx-proxy-manager:
  #   image: "jc21/nginx-proxy-manager"
  #   pull_policy: always
  #   container_name: nginx-proxy-manager
  #   restart: unless-stopped
  #   ports:
  #     - 80:80
  #     # - 81:81
  #     - 443:443
  #   volumes:
  #     - /data2/server/data/nginx-proxy-manager/data:/data
  #     - /data2/server/data/nginx-proxy-manager/letsencrypt:/etc/letsencrypt

  zoraxy:
    image: zoraxydocker/zoraxy:latest
    pull_policy: always
    restart: unless-stopped
    container_name: zoraxy
    ports:
      - 80:80
      - 443:443
      - 8005:8000/tcp
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - /data2/server/data/zoraxy:/opt/zoraxy/config/
    environment:
      ARGS: "-fastgeoip"

  qbit:
    image: linuxserver/qbittorrent
    pull_policy: always
    restart: unless-stopped
    container_name: qbit
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Ho_Chi_Minh
      - WEBUI_PORT=8080
    volumes:
      - /data2/server/media/torrents:/data/torrents
      - /data2/server/data/qbit/config:/config
      - /data2/server/data/qbit/theme:/theme
    # ports:
    #   - 6881:6881
    #   - 6881:6881/udp
    #   - 8080:8080

  sonarr:
    image: linuxserver/sonarr:latest
    pull_policy: always
    restart: unless-stopped
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Ho_Chi_Minh
    volumes:
      - /data2/server/data/sonarr/config:/config
      - /data2/server/media/:/data
    # ports:
    #   - 8989:8989

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    pull_policy: always
    restart: unless-stopped
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Ho_Chi_Minh
    volumes:
      - /data2/server/data/radarr/config:/config
      - /data2/server/media/:/data
    # ports:
    #   - 7878:7878

  # jackett:
  #   image: lscr.io/linuxserver/jackett:latest
  #   pull_policy: always
  #   container_name: jackett
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Asia/Ho_Chi_Minh
  #     - AUTO_UPDATE=true
  #   volumes:
  #     - /data2/server/data/jackett/config:/config
  #   # ports:
  #   #   - 9117:9117
  #   restart: unless-stopped

  prowlarr:
    image: ghcr.io/hotio/prowlarr
    pull_policy: always
    restart: unless-stopped
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Ho_Chi_Minh
    volumes:
      - /data2/server/data/prowlarr/config:/config
    # ports:
    #   - 9696:9696

  flaresolverr:
    # image: ghcr.io/flaresolverr/flaresolverr:latest
    image: 21hsmw/flaresolverr:nodriver
    pull_policy: always
    restart: unless-stopped
    container_name: flaresolverr
    environment:
      # - LOG_LEVEL=info
      # - LOG_HTML=false
      # - CAPTCHA_SOLVER=none
      - TZ=Asia/Ho_Chi_Minh
    # ports:
    #   - 8191:8191

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    pull_policy: always
    restart: unless-stopped
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Ho_Chi_Minh
    volumes:
      - /data2/server/data/bazarr/config:/config
      - /data2/server/media/:/data
    # ports:
    #   - 6767:6767

  tdarr:
    container_name: tdarr
    image: ghcr.io/haveagitgat/tdarr:latest
    pull_policy: always
    restart: unless-stopped
    # network_mode: bridge
    # ports:
    #   - 8265:8265 # webUI port
    #   - 8266:8266 # server port
    #   - 8267:8267 # Internal node port
    #   - 8268:8268 # Example extra node port
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
      - /dev/dri/card0:/dev/dri/card0
    environment:
      - TZ=Asia/Ho_Chi_Minh
      - PUID=1000
      - PGID=1000
      - UMASK_SET=002
      - serverIP=0.0.0.0
      - serverPort=8266
      - webUIPort=8265
      - internalNode=true
      - nodeID=MyInternalNode
    volumes:
      - /data2/server/data/tdarr/server:/app/server
      - /data2/server/data/tdarr/configs:/app/configs
      - /data2/server/data/tdarr/logs:/app/logs
      - /tmp/tdarr/transcode_cache:/temp
      - /data2/server/media:/media

  speedtest-tracker:
    image: lscr.io/linuxserver/speedtest-tracker:latest
    pull_policy: always
    restart: unless-stopped
    container_name: speedtest-tracker
    # ports:
    #     - '8080:80'
    #     - '8443:443'
    environment:
      - PUID=1000
      - PGID=1000
    env_file: ./.env
    volumes:
      - /data2/server/data/speedtest-tracker/config:/config

  jellystat-db:
    container_name: jellystat-db
    image: postgres:16-alpine
    pull_policy: always
    restart: unless-stopped
    env_file: ./.jellystat.env
    volumes:
      - /data2/server/data/jellystat-db/data:/var/lib/postgresql/data

  jellystat:
    container_name: jellystat
    image: cyfershepard/jellystat:latest
    pull_policy: always
    restart: unless-stopped
    environment:
      POSTGRES_IP: jellystat-db
      POSTGRES_PORT: 5432
      POSTGRES_DATABASE: jellystat
    env_file: ./.jellystat.env
    volumes:
      - /data2/server/data/jellystat/data:/app/backend/backup-data
    depends_on:
      - jellystat-db
    # ports:
    #   - "3000:3000"
